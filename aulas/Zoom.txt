% A pure minimalistic LaTeX-Beamer theme for everyone to use.
% Copyright (C) 2020 Kai Norman Clasen

% This program is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.

% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even    the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.

% You should have received a copy of the GNU General Public License
% along with this program.  If not, see <https://www.gnu.org/licenses/>.

% This file is part of beamerthemepureminimalistic.

% If problems/bugs are found or enhancements are desired, please contact
% me over: https://github.com/kai-tub/latex-beamer-pure-minimalistic

\documentclass[11pt, aspectratio=169]{beamer}
% should also look nice for the classic aspectratio
% of course, than the text has to be refitted
% \documentclass{beamer} 
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{tikz}
\usepackage[options]{algorithm2e}
\usepackage[ruled,vlined]{algorithm2e}
\usetheme[showmaxslides, darkmode, helvetia]{pureminimalistic}

\usepackage[backend=biber, doi=false, maxbibnames=2, maxcitenames=2,%
            style=numeric, sorting=none, url=false, eprint=false]{biblatex}
\usepackage{hyperref}

\addbibresource{demo_bib.bib}
% this makes it possible to add backup slides, without counting them
\usepackage{appendixnumberbeamer}
\renewcommand{\appendixname}{\texorpdfstring{\translate{appendix}}{appendix}}

% if loaded after begin{document} a warning will appear: "pdfauthor already used"
\title[El método $QR$]{\Large{El método $QR$.}}
%\title[short title]{Intro}
%\title[short title]{This is the normal length of a research paper: always longer than you would expect}
\author{Alan Reyes-Figueroa \\}
\institute{\textcolor{\gray}{Métodos Numéricos II} \hfill (Aula 12) $\ $ 18.agosto.2022} 
%\date{\today}

% ----- set colors -----

\definecolor{textcolor}{RGB}{0, 0, 0}
%\definecolor{title}{RGB}{128, 0, 0}
\definecolor{title}{RGB}{14,84,48}
\definecolor{footercolor}{RGB}{96, 96, 96}
\definecolor{bg}{RGB}{255, 255, 255}

\definecolor{bg2}{RGB}{64, 64, 64}
\definecolor{text2}{RGB}{192, 192, 192}

\renewcommand{\beamertextcolor}{textcolor}
\renewcommand{\beamerbgcolor}{bg}
\renewcommand{\beamerfootertextcolor}{footercolor}
\renewcommand{\beamertitlecolor}{title}

% ----- set logos -----
 
\renewcommand{\logotitle}{\includegraphics%
   [width=0.4\linewidth]{logos/Logo-horizontal-verde.png}}
\renewcommand{\logoheader}{\includegraphics%
   [width=0.5\linewidth]{}}
\renewcommand{\logofooter}{\includegraphics%
   [width=0.65\linewidth]{logos/Logo-horizontal-verde.png}}

% ----- set environments -----

\theoremstyle{plain}
\newtheorem{thm}{Teorema}
\newtheorem{pros}{Proposición}
\newtheorem{prop}{Propiedad}
\newtheorem{props}{Propiedades}
\newtheorem{lem}{Lema}
\newtheorem{cor}{Corolario}
\newtheorem{defn}{Definición}

\newcommand{\CC}{\mathbb{C}}
\newcommand{\DD}{\mathbb{D}}
\newcommand{\HH}{\mathbb{H}}
\newcommand{\PP}{\mathbb{P}}
\newcommand{\RR}{\mathbb{R}}
\newcommand{\TT}{\mathbb{T}}
\newcommand{\ZZ}{\mathbb{Z}}

\newcommand{\aaa}{\mathbf{a}}
\newcommand{\bb}{\mathbf{b}}
\newcommand{\cc}{\mathbf{c}}
\newcommand{\ee}{\mathbf{e}}
\newcommand{\nn}{\mathbf{n}}
\newcommand{\pp}{\mathbf{p}}
\newcommand{\qq}{\mathbf{q}}
\newcommand{\ttt}{\mathbf{t}}
\newcommand{\uu}{\mathbf{u}}
\newcommand{\vv}{\mathbf{v}}
\newcommand{\ww}{\mathbf{w}}
\newcommand{\xx}{\mathbf{x}}
\newcommand{\yy}{\mathbf{y}}
\newcommand{\zz}{\mathbf{z}}
\newcommand{\bz}{\mathbf{0}}

% derivadas
\newcommand{\ddx}[1]{\frac{d}{d #1}}
\newcommand{\dfdx}[2]{\frac{d #1}{d #2}}
\newcommand{\ddyxx}[2]{\frac{d^2 #1}{d #2^2}}
\newcommand{\ddydx}[3]{\frac{d^2 #1}{d #2 d #3}}
\newcommand{\ttx}[1]{\tfrac{d}{d #1}}
\newcommand{\tftx}[2]{\tfrac{d #1}{d #2}}

\newcommand{\ppx}[1]{\frac{\partial}{\partial #1}}
\newcommand{\pfpx}[2]{\frac{\partial #1}{\partial #2}}
\newcommand{\ppfxx}[2]{\frac{\partial^2 #1}{\partial #2^2}}
\newcommand{\ppfpx}[3]{\frac{\partial^2 #1}{\partial #2 \partial #3}}
\newcommand{\ssx}[1]{\tfrac{\partial}{\partial #1}}
\newcommand{\sfsx}[2]{\tfrac{\partial #1}{\partial #2}}
\newcommand{\ssfxx}[2]{\tfrac{\partial^2 #1}{\partial #2^2}}
\newcommand{\ssfpx}[3]{\tfrac{\partial^2 #1}{\partial #2 \partial #3}}

\DeclareMathOperator{\argmin}{argmin}
\DeclareMathOperator{\argmax}{argmax}
\DeclareMathOperator{\Aut}{Aut}
\DeclareMathOperator{\diam}{diam}
\DeclareMathOperator{\dist}{dist}
\DeclareMathOperator{\divv}{div}
\DeclareMathOperator{\im}{Im}
\DeclareMathOperator{\idx}{Index}
\DeclareMathOperator{\Int}{Int}
\DeclareMathOperator{\Ker}{Ker}
\DeclareMathOperator{\proj}{proj}
\DeclareMathOperator{\rank}{rank}
\DeclareMathOperator{\re}{Re}
\DeclareMathOperator{\tr}{tr}


\begin{document}
% has to be loaded outside of a frame to work!
\maketitle


% ------------ table of contents ------------

% For longer table of contents, I find it cleaner to
% use no footline.

%\begin{frame}[plain, noframenumbering]{Outline}
%  \tableofcontents
%\end{frame}


% **********************************************
% *                El Metodo QR                *
% **********************************************
\section{El Metodo QR}


% ------------ Frame 01 ------------
\begin{frame}{El Metodo QR}

\small
El algoritmo QR, ({\sc Francis, Kublanóvskaya}), data de la década de los 50s, es una de las joyas del análisis numérico. %\pause
En su forma más simple, este algoritmo se puede ver como un procedimiento estable para calcular factoraciones $QR$ de las potencias de una matriz $A$, $A^2$, $A^3$, $\ldots$ \\
\vspace{0.2cm} %\pause

En su versión más simple, el algoritmo el es siguiente:
\vspace{0.2cm} %\pause

\textbf{Algoritmo:} (Método $QR$ puro, sólo calcula autovalores). \\
\emph{Inputs}: $A \in \RR^{n \times n}$, simétrica. \\
\emph{Outputs}: $R \in \RR^{n \times n}$, matriz diagonal, con los autovalores de $A$ en la diagonal. \\
\texttt{Initialize} $A^{(0)} = A$. \\
\texttt{for} $k = 1, 2, \ldots$: \\
$\qquad$ $Q^{(k)} R^{(k)} = A^{(k-1)}$, (factoración $QR$) \\
$\qquad$ $A^{(k)} = R^{(k)} Q^{(k)}$. (Recombinar en orden reverso) \\
\vspace{0.2cm} %\pause
Tomar una factoración $QR$, multiplicar los factores $Q$ y $R$ en el orden inverso $RQ$, y repetir.
\end{frame}


% ------------ Frame 02 ------------
\begin{frame}{El Metodo QR}

\small
Bajo supuestos adecuados, este algoritmo simple converge a una forma de Schur para la matriz $A$ (triangular superior si $A$ es arbitraria, y diagonal si $A$ es simétrica), %\pause
donde en la diagonal de los iterados $A^{(k)}$ se van guardando los autovalores de la matriz $A$. \\
\vspace{0.2cm} %\pause

Formalmente, si $A \in \RR^{n \times n}$ es una matriz a la que queremos calcular los autovalores, durante el $k$-ésimo paso del método anterior, calculamos la descomposición $QR$ de $A^{(k)}$: $A^{(k)} = Q^{(k)} R^{(k)}$. %\pause
Luego, $Q^{(k)}$ es ortogonal y $R^{(k)}$ es triangular superior. %\pause
Al formar $Q^{(k+1)} = R^{(k)} Q^{(k)}$ resulta
\vspace{-0.1cm}
\begin{equation} \label{eq:qr}
    A^{(k+1)} = R^{(k)} Q^{(k)} %\pause
    = (Q^{(k)})^{-1} Q^{(k)} R^{(k)} Q^{(k)} %\pause
    = (Q^{(k)})^{-1} A^{(k)} Q^{(k)} %\pause
    = (Q^{(k)})^T A^{(k)} Q^{(k)}.
\end{equation}
%\pause
Esto muestra que $A^{(k+1)}$ es similar a $A^{(k)}$, y portanto tienen los mismos autovalores. \\ %\pause
Como esto vale para $k=0,1,2,\ldots$, todos los iterados $A^{(k)}$ son similares a $A^{(0)} = A$, y se preservan los autovalores de $A$. \\
\vspace{0.2cm} %\pause

EN el límite, los iterados $A^{(k)}$ convergen a una matriz diagonal $\Lambda$, cuyas entradas son los autovalores de $A$, esto es
$$ \lim_{k\to\infty} A^{(k)} = \Lambda. $$
\end{frame}


% ------------ Frame 03 ------------
\begin{frame}{El Metodo QR}

\small
De (\ref{eq:qr})
\vspace{-0.5cm}
\begin{eqnarray*}
    A &=& A^{(0)} \ = \ Q^{(0)} A^{(1)} (Q^{(0)})^T %\pause
    \ = \ Q^{(0)} Q^{(1)} A^{(2)} (Q^{(1)})^T (Q^{(0)})^T \\ %\pause
    &=& \ldots \\
    &=& \underbrace{Q^{(0)} Q^{(1)} \cdots Q^{(k)}}_{Q_k} A^{(k+1)} \underbrace{(Q^{(0)} Q^{(1)} \cdots Q^{(k)})^T}_{Q_k^T}.
\end{eqnarray*}

Entonces en el límite, si $Q = \lim_{k\to\infty} \prod_{j=0}^k Q^{(j)}$, se tiene $A = \lim_{k\to \infty} Q_k A^{(k+1)} Q_k^T = Q \Lambda Q^T$,
%\pause
y se obtiene una descomposición espectral para $A$. \\
\vspace{0.2cm} %\pause

El algoritmo $QR$ se puede considerar una versión más sofisticada del método de las potencias. Ambos métodos multiplican repetidamente un vector por la matriz de la que se quieren conocer los valores propios, normalizando después de cada iteración. \\
\vspace{0.2cm} %\pause

Sin embargo, mientras que el método de las potencias solo proporciona el mayor de los valores propios, el método $QR$ usa la descomposición homónima para normalizar y ortogonalizar tras cada iteración. Así cuando $k\to \infty$, se obtiene la matriz diagonal $\Lambda$ con todos los autovalores y por tanto $Q$ queda con los autovectores como columnas.
\vspace{2cm}
\end{frame}


% ------------ Frame 04 ------------
\begin{frame}{El Metodo QR}

\small
\textbf{Algoritmo:} (Método $QR$ puro, autovalores y autovectores). \\
\emph{Inputs}: $A \in \RR^{n \times n}$, simétrica. \\
\emph{Outputs}: $Q \in \RR^{n \times n}$, ortogonal con los autovectores de $A$ como columnas, $R \in \RR^{n \times n}$ matriz diagonal, con los autovalores de $A$ en la diagonal. \\
\texttt{Initialize} $A^{(0)} = A$, $Q = I$. \\
\texttt{for} $k = 1, 2, \ldots$: \\
$\qquad$ $Q^{(k)} R^{(k)} = A^{(k-1)}$, (factoración $QR$) \\
$\qquad$ $A^{(k)} = R^{(k)} Q^{(k)}$, (Recombinar en orden reverso), \\
$\qquad$ $Q = QQ^{(k)}$. (Multiplicar los iterados $Q^{(k)}$.
\\
\texttt{Return} $Q$, $R = R^{(k)}$.
\vspace{2cm}

\end{frame}


% ------------ Frame 05 ------------
\begin{frame}{El Metodo QR}

\small
El método $QR$ no es el único de este tipo. Antes de éste, se usaba también el método $LR$, el cual ejecuta una iteración similar al $QR$ pero basándose en la descomposición $LU$, en lugar de la $QR$. \\ %\pause
Como es de esperar el método $QR$ proporcional una solución mucho más estable, debido a la ortogonalidad de los componentes.
\vspace{3cm}
\end{frame}


% ------------ Frame 06 ------------
\begin{frame}{El Metodo QR}

\small
\textbf{Algoritmo:} (Método $QR$ práctico). \\
\emph{Inputs}: $A \in \RR^{n \times n}$, simétrica. \\
\emph{Outputs}: $Q \in \RR^{n \times n}$, ortogonal con los autovectores de $A$ como columnas, $R \in \RR^{n \times n}$ matriz diagonal, con los autovalores de $A$ en la diagonal. \\
\texttt{Initialize} $A^{(0)} = A$, $Q = I$. \\
\texttt{for} $k = 1, 2, \ldots$: \\
$\qquad$ $\mu^{(k)} = shift$ \\
$\qquad$ $Q^{(k)} R^{(k)} = A^{(k-1)} - \mu^{(k)}I$, (factoración $QR$) \\
$\qquad$ $A^{(k)} = R^{(k)} Q^{(k)} + \mu^{(k)}I$, (Recombinar en orden reverso), \\
$\qquad$ $Q = QQ^{(k)}$. (Multiplicar los iterados $Q^{(k)}$.
\\
\texttt{Return} $Q$, $R = R^{(k)}$.
\vspace{2cm}
\end{frame}


% **********************************************
% *             Forma de Hessemberg            *
% **********************************************
\section{Forma de Hessemberg}


% ------------ Frame 07 ------------
\begin{frame}{Forma de Hessemberg}

\small
Para efectos de mejorar la estabilidad y eficiencia en el cálculo de los autovalores, se propone un esquema en dos fases:
\begin{enumerate}
    \small
    \item Reducir la matriz $A$ a la forma de Hessenberg mediante una secuencia de transformaciones de semejanza unitaria.
    \item Calcular los autovalores sobre la forma de Hessemberg.
\end{enumerate}
\vspace{0.2cm} %\pause

Para calcular la factoración de Schur $A = QTQ^T$, nos gustaría aplicar transformaciones unitarias de similitud sobre $A$, de tal manera que se introduzcan ceros bajo la diagonal. \\ %\pause
Una mala idea es triangularizar la matriz $A$ mediante aplicaciones de reflexiones de Househölder de forma directa:
\begin{figure}
    \centering
    \includegraphics[width=.4\linewidth]{aula09/bad-idea.jpg}
\end{figure}
\end{frame}


% ------------ Frame 08 ------------
\begin{frame}{Forma de Hessemberg}

\small
Desafortunadamente, para completar la transformación de similitud, también debemos multiplicar $Q_1$ a la derecha de $A$:
\begin{figure}
    \centering
    \includegraphics[width=.4\linewidth]{aula09/bad-idea2.jpg}
\end{figure}
%\pause
Esto tiene el efecto de reemplazar cada columna de la matriz por una combinación lineal de todas las columnas. El resultado es que los ceros que estaban previamente introducidos son destruidos. \\
\vspace{0.2cm} %\pause

La estrategia correcta para introducir ceros requeridos consiste en ser menos ambicioso y operan sobre menos entradas de la matriz. %\pause
En el primer paso, seleccionamos un reflector Househölder $Q_1$ que deja la primera fila sin cambios. Cuando se multiplica a la izquierda de $A$, forma combinaciones lineales de las filas $2, \ldots, n$ para introducir ceros
\end{frame}


% ------------ Frame 09 ------------
\begin{frame}{Forma de Hessemberg}

\small
en las filas $3, \ldots, n$ de
la primera columna. %\pause
Entonces, al multiplicar $Q_1$ a la derecha de $A$, esto deja
la primera columna sin cambios.
\vspace{-0.1cm}
\begin{figure}
    \centering
    \includegraphics[width=.65\linewidth]{aula09/good-idea.jpg}
\end{figure}
\vspace{-0.1cm} %\pause
Esta idea se repite para introducir ceros en columnas posteriores. Por ejemplo, el reflector Househölder, $Q_2$, deja la primera y segunda filas y columnas sin cambios:
\vspace{-0.1cm}
\begin{figure}
    \centering
    \includegraphics[width=.65\linewidth]{aula09/good-idea2.jpg}
\end{figure}
\end{frame}


% ------------ Frame 10 ------------
\begin{frame}{Forma de Hessemberg}

\small
Después de repetir este proceso $n-2$ veces, tenemos un producto en la \textbf{forma de {\sc Hessenberg}}:
\vspace{-0.1cm}
\begin{figure}
    \centering
    \includegraphics[width=.4\linewidth]{aula09/good-idea3.jpg}
\end{figure}
\vspace{3cm}
\end{frame}


% ------------ Frame 11 ------------
\begin{frame}{Forma de Hessemberg}

\small
\textbf{Algoritmo:} (Reducción de {\sc Househölder} a la forma de {\sc Hessemberg}). \\
\emph{Inputs}: $A \in \RR^{n \times n}$, simétrica. \\
\emph{Outputs}: $Q \in \RR {n \times n}$ matriz ortogonal de reflexiones de Househölder, $H \in \RR^{n \times n}$, matriz en la forma de Hessemberg, tales que $A = Q^THQ$. \\
\texttt{Initialize} $Q = I$, $H = A$. \\
\texttt{for} $k = 1, 2, \ldots, n-2$: \\
$\qquad$ $\xx = H_{k+1:n,k}$, \\
$\qquad$ $\qq_k = sign(x_1)\, ||\xx||_2 \ee_1 + \xx$, \\
$\qquad$ $\qq_k = \qq_k / ||\qq_k||_2$, \\
$\qquad$ $H_{k+1:n,k:n} = H_{k+1:n,k:n} - 2\qq_k (\qq_k^TH_{k+1:n,k:n})$, \\
$\qquad$ $H_{1:n,k+1:n} = H_{1:n,k+1:n} - 2(H_{1:n,k+1:n}\qq_k) \qq_k^T$. \\
$\qquad$ $Q = QQ^{(k)}$. (Multiplicar los iterados $Q^{(k)}$).
\\
\texttt{Return} $Q$, $H$.
\vspace{0.2cm} %\pause

\textbf{Obs!} En la práctica la matriz $Q$ no se guarda explícitamente. Sólo se construye $H$.
\end{frame}


\end{document}